/*2.1.1下面是数值型变量的输入格式设置*/
libname a2 "F:\03软件学习\sas\01小白学sas";/*新建逻辑库文件a2,哦永久的*/
data a2.x;
input x 2.1; /*这里的2.1表示x这个数据集的输入格式，也就是sas怎么读，
sas会认为所有输入的数是2位，其中一位是小数*/  
cards;
13
2
0.1
333
;/*这个结果是从左往右读，显示为1.3 0.2 0.0 3.3，所以一般数值型变量不用设置输入格式*/
proc print;/*输入这行，输入的数据会弹出来*/
run;

/*知识拓展：如果不小心sas资源管理器关了，可以输入sasenv进行恢复*/

/*2.1.2字符型变量的输入格式*/
/*字符输入格式是美国符号$w.  美国符号啥时候都要有，
w.用来设置宽度，1个字是2宽度，sas默认宽度是8，也就是默认情况下只能读4个字*/
data gvg;
input homeplace $12.;/*输入homeplace这个变量，设置它的宽度为12*/
cards;
山西省运城市
;
proc print;
run;

/*2.1.4两个特殊符号:和&*/
data gh;
input city:$18. zone$;/*city之后冒号:
是告诉sas空格之后或者变量宽度达到就可以读下一个变量了*/
cards;
山东省蓬莱市 0536
山东省青岛市市南区 0532
;
proc print;
run;

data fgf;
input name&:$50. city&:$50.;
/*&用来解决变量有空格的问题，此时输入的两个变量之间可以打两个及以上空格*/
cards;
peter parker  山东省 蓬莱市 
ross geller  山东省 青岛市 市南区
;
proc print;
run;

/*2.2sas的输出格式*/
/*2.2.1数值型变量的输出格式*/
data fg;
input nuj kjh prop;
format nuj 5.2 kjh comma12.1 prop percent8.2;
/*kjh变量12位，保留小数点后1位，每3位显示*/
cards;
50 10205600 0.1236
45 9580000 0.0361
;
proc print;
run;
/*2.2.2字符型变量的输出格式*/
data fs;
input x$ y$2.;
format x$2.;
x1=x+1;
y1=y+1;
cards;
1100 1100
;
proc print;
run;
/*2.2.3日期型变量的输出格式*/
data dat;
input date1:yymmdd10. date2:yymmdd10. date3:yymmdd10.;
format date1:yymmdd10. date2:yymmdds8. date3:yymmddp8.;
cards;
13.06.16 130616 20130616
;
proc print;
run;


/*2.3.1用invalue和value自定义格式*/
/*自定义输入格式invalue*/
proc format;
invalue fage low-<40=30 40-<50=40 50-<60=50 60-high=60;
data age;
input id age fage.;
cards;
1 36
2 43
3 51
4 60
5 59
;
proc print;
run;
/*对于已有的或导入的数据集进行输出格式刚改*/
proc format;
value fage low-<50=40 50-<60=50 60-high=60;
data age1;
set age;
format id age fage.;
proc print;
run;

/*自定义输入和输出格式*/
proc format;
invalue $grade 1="freshman" 2="sophomore" 3="junior" 4="senior";
value fscore low-<60="不及格" 60-<80="及格" 80-high="优秀";
data grade;
input id grade: $grade20. score;
format score fscore.;
cards;
1 1 60
2 4 59
3 3 80
4 2 79
;
proc print;
run;

/*2.3.2用picture照个输出模板*/
/*picture定义显示样式*/
proc format;
picture pft low-high="0,000,000"(prefix="￥")/*前缀为￥*/;
picture pro low-high="09.99%";
run;
data profit;
input profit prop;
format profit pft. prop pro.;
cards;
298630 16.72
365800 21.30
;
proc print;
run;

/*2.4.1利用表达式或函数直接产生新变量*/
data a1;
input wt ht;
bmi=wt/(ht/100)**2;
rbmi=sqrt(bmi)/*开根号*/;
obesity=(bmi>=28);
city="北京";
date="19oct2020"d;
format date yymmdd10.;
cards;
60 170
55 166
73 161
;
proc print;
run;


/*2.4.2利用if-then语句产生新变量*/
data lx;
input id lx$;
lx1=lx in ("有效","显效","痊愈");
if lx in ("有效","显效","痊愈") then lx2="有效";else lx2="无效";
cards;
1 显效
2 有效
3 无效
4 痊愈
;
proc print;
run;


/*2.4.3retain语句和累加语句产生新变量*/
 data fh;
 retain count 0;/*retain指定变量count初始值为0*/
 count=count+1;
 input time;
 cards;
 23
 29
 49
 ;
 proc print;
 run;

 data fh;
 count+1;/*累加语句：变量名+格式*/
 input time;
 cards;
 23
 29
 49
 ;
 proc print;
 run;


data fsh;
input amount;
retain year 2000;/*remain指定year初始值为2000*/
year=year+1;
total+amount;/*累加语句*/
cards;
100
200
300
;
proc print;
run;

/*2.4.4利用do循环产生新变量*/
data fh;
do count=1 to 5;
input time;
output;
end;
cards;
23
29
49
64
87
;
proc print;
run;

/*2.4.5指定新变量的类型和长度*/
/*length函数定义变量长度*/
data lx;
input id lx$;
length lx1$16.;/*length定义新变量的长度和类型*/
if lx="无效" then lx1="无效";
else lx1="有效+显效+痊愈";
cards;
1 显效
2 有效
3 无效
4 痊愈
;
proc print;
run;

/*2.5@符号在输入方式中的应用*/
/*@和@@符号的用法*/
data fsh;
input id age@@;
cards;
1 23 2 29 3 49 4 36
;
proc print;
run;

data score;
input gender$ n@;
do id=1 to n;
input score@@;
output;
end;
cards;
M 4 86 90 83 79
F 3 85 93 90
;
proc print;
run;

/*sas函数应用技巧*/
/*与数值计算有关的函数*/
DATA aa;
input age@@;
gage=round(age-5,10)/*round函数使得age-5四舍五入到能被10整除的最接近的数*/;
cards;
29 31 39 40 55 60 64
;
proc print;
run;
/*按照奇偶数分组*/
data bb;
input id@@;
if mod(id,2)=1 then group="A";/*mod函数返回id/2的余数*/
else group="B";
cards;
1 2 3 4 5 6 7 8 9 10
;
proc print;
run; 

/*2.6.2与字符有关的函数*/
/*2提取变量中的字符*/
/*substrn提取函数 substrn(变量,起始位置,提取长度)*/
data iden;/*新建数据集iden*/
input sfz: $18.;/*输入变量sfz，字符型，定义长度18位  */
if length(sfz)=18/*如果变量sfz长度是18*/ 
then tq=substrn(sfz,17,1);/*sfz 17位开始 提取1位*/
else tq=substrn(sfz,15,1);/*身份证 15位开始 提取1位*/
if mod(tq,2)=1/*mod函数是返回变量tq除以2的余数*/ 
then gender="男";
else gender="女";
if length(sfz)=18 then bir=substrn(sfz,7,8);/*提取出生日期*/
else bir=substrn(sfz,4,8);
cards;
360A53319720613591X
360533801215792
360533198208254533
360533851009226
;
proc print;
run;
/*提取出生日期*/
data iden;
input sfz:$18.;
if length(sfz)=18 then bir=substrn(sfz,7,8);
else bir=substrn(sfz,4,8);
cards;
360A53319720613591X
360533801215792
360533198208254533
360533851009261
;
proc print;
run;


/*3查找变量中的字符 find或findc(变量,查找内容,"i",起始位置)*/
data book;
input book:&$100.;
sas=find(book,"sas","i");/*在变量book中查找完整sas，忽略大小写*/
if sas>0 then class="SAS书";
else class="其他";
cards;
Survival Analysis Using SAS
Matlab程序分析
Spss数据分析
SAS应用分析
The Little SAS Book
;
proc print;
run;

/*将字母和数字分开提取*/
 data computer;
 input type$@@;
 alpha=anyalpha(type);/*返回变量type第一个字母的位置是几*/
 digit=anydigit(type);/*返回第一个数字的位置是几*/
 xl=substrn(type,alpha,digit-alpha);/*提取变量type中的字母*/
 /*digit-alpha：表示字母的长度=第一次数字的位置-字母的位置*/
 xh=substrn(type,digit,length(type)-(digit-alpha));/*提取变量type中的数字*/
 cards;
 TP340 KS320 B3510 C560 H430
 ;
 PROC PRINT;
 run;

 /*4替换变量中的字符：tranwrd(变量,查找值,替换值)*/
 data lx;
 input id lx$;
 lx1=tranwrd(lx,"显效","有效");
 lx1=tranwrd(lx1,"痊愈","有效");
 cards;
 1 显效
 2 有效
 3 无效
 4 痊愈
 ;
 proc print;
 run;

 /*5去除变量中的字符*/
 /*compress(变量,"欲去除的变量","修饰符")*/
 data computer;
 input type$@@;
 xh=compress(type,"","d");/*去除type中的所有数字*/
 bh=compress(type,"","a");/*去除type中的所有字母*/
 cards;
 TP340 KS320 B3510 C560 H340
 ;
 PROC PRINT;
 RUN;

 data phone;
 input phone:&$300.;
 phone1=compress(phone,"(-) ");/*去除phone中的（-） 四个字符*/
 phone2=compress(phone,"","kd");/*保留变量phone的数字*/
 cards;
 (01067658925)
 010-67665632
 010 67685621
 ;
 proc print;
 run;

 /*6变量的合并*/
 /*cats(变量1,变量2,....)*/
 /*catx（"分隔符",变量1,变量2,...）*/
data code;
input city$ county$;
prov="37";
code1=cats(prov,city,county);
code2=catx("-",prov,city,county);
cards;
05 02
03 21
06 13
06 85
;
proc print;
run;

/*7清点变量中字符*/
/*count(变量,欲清点的字符,"i")*/
data cloth;
input pj&:$200.;
beauty=count(pj,"漂亮");
cards;
裙子很漂亮，穿起来有仙女的感觉
裙子很喜欢，很漂亮，不知道面料牢固不牢固
裙子很漂亮
裙子很飘逸
面料柔软舒适。很飘逸
很漂亮，超喜欢这个颜色
质量一般，没有想象中的那么好
很大方，不足之处是，透气性不是非常好
;
proc print;
run;


data ques;
do id=1 to 4;
input (y1-y10) ($);/*输入变量y1-y10，均为字符型，后面都加上$*/
y=cats(of y1-y10);/*合并变量y1-y10为y*/
cy=count(y,"y","i");/*查找y的个数*/
cn=count(y,"n","i");/*查找n的个数*/
output;
end;
cards;
y y n y n y n y n n
y n y y n y y y n y
n y n y y y n y y n
n n y y y y n y n y
;
proc print;
run;

/*8查找变量中的缺失值
函数missing(变量)*/
data baseline;
do id=1 to 4;
input gender$ age;
mgender=missing(gender);/*判断gender是否有缺失*/
mage=missing(age);/*判断age是否有缺失*/
output;
end;
cards;
f 60
m 59
f .
. 48
;
proc print;
run;

/*2.6.3与日期和时间有关的函数*/
/*1日期的合并与差值*/
/*合并:mdy（月，日，年）*/
/*差值：yrdif(开始日期，结束日期，"计算依据")
        datdif(开始日期,结束日期,"计算依据")*/
data date;
input year1$ month1$ day1$ year2$ month2$ day2$;
date1=mdy(month1,day1,year1);
date2=mdy(month2,day2,year2);
format date1 date2 yymmdd10.;
ydif=yrdif(date1,date2,"actual");/*计算以年为单位的日期差值*/
ddif=datdif(date1,date2,"actual");/*计算以日为单位的日期差值*/
cards;
2013 05 21 2014 03 11
2013 03 10 2014 01 22
2013 06 05 2014 05 06
2013 07 08 2014 04 13
;
proc print;
run;

/*2日期的提取*/
data dt;
input dt:ymddttm30.;
date=datepart(dt);/*提取日期部分*/
time=timepart(dt);/*提取时间部分*/
month=month(date);/*提取月份*/
hour=hour(time);/*提取小时*/
format dt datetime30. date yymmdd10. time time12.;
cards;
2009/6/26:11:20:00
2009/5/5:19:30:00
2009/9/12:13:20:00
;
proc print;
run;

/*2.6.4与变量类型转换有关的函数*/
/*1.input函数:字符型转数值型*/
/*input(变量，输入格式)*/
data date;
input year1$ month1$ day1$ year2$ month2$ day2$;
date1=catx("/",year1,month1,day1);
date2=catx("/",year2,month2,day2);
d1=input(date1,yymmdd10.);/*将date1转换为日期型*/
d2=input(date2,yymmdd10.);
format d1 d2 yymmdd8.;
dif=d2-d1;
cards;
2013 05 21 2014 03 11
2013 03 10 2014 01 22
2013 06 05 2014 05 06
2013 07 08 2014 04 13
;
proc print;
run;

data date;
input year1$ month1$ day1$ year2$ month2$ day2$;
date1=cats(year1,month1,day1);
date2=cats(year2,month2,day2);
d1=input(date1,yymmdd10.);
d2=input(date2,yymmdd10.);
d3=input(date1,8.);/*将date1转换成数值型*/
d4=input(date2,8.);
format d1 d2 yymmdd8.;
dif1=d1-d2;
dif2=d4-d3;
cards;
2013 05 21 2014 03 11
;
proc print;
run;

/*2put函数：数值型转字符型*/
/*put(变量，输出格式)*/
proc format;
invalue fage low-<40=30 40-<50=40 
                  50-<60=50 60-high=60;
data age;
do id=1 to 5;
input age fage.;
output;
end;
cards;
36
43
51
60
59
;
proc print;
run;

proc format;
value fage low-<40=30 40-<50=40 50-<60=50 60-high=60;
data age;
do id=1 to 5;
input age@@;
ageg=put(age,fage.);/*将age格式转换成fage这个格式*/ 
output;
end;
cards;
36 43 51 60 59 
;
proc print;
run;
 
/*2.6.5与概率和分布有关的函数*/
data telephone;
p=cdf("poisson",1,5);/*计算均值为5的poisson分布中，出现次数<=1的概率*/
                     /*前提是计数资料*/
proc print;
run;

data telephone;
p=cdf("normal",30,60,10);/*均数为60，标准差为10的正态分布中，<=30的 概率*/
proc print;
run;

/*2.6.6lag和dif函数*/
data  dm;
do year=2008 to 2013;
input profit;
plag=lag(profit);/*返回变量profit的前一个记录*/
pdif=dif(profit);/*返回变量profit当前记录与前一个记录的比值*/
pratio=profit/plag;
output;
end;
cards;
989
1002
1023
1022
1065
1112
;
proc print;
run;
